name: Advanced AI Model Scan with Policy
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  scan-and-enforce:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scan for AI models
        id: scan
        uses: hiddenlayerai/hl-scai@main
        with:
          directory: ./src
          huggingface-token: ${{ secrets.HUGGINGFACE_TOKEN }}
          output-file: ai-scan-results.json
          fail-on-detection: false

      - name: Process scan results
        if: always()
        run: |
          echo "## Scan Results"
          echo "Models found: ${{ steps.scan.outputs.models-found }}"
          echo "Report saved to: ${{ steps.scan.outputs.report-path }}"
          echo ""
          echo "### Summary:"
          echo "${{ steps.scan.outputs.summary }}"

      - name: Check AI assets
        if: steps.scan.outputs.models-found > 0
        run: |
          # Parse the AI assets JSON
          echo "${{ steps.scan.outputs.ai-assets }}" | jq '.'

          # Example: Check for specific providers or models
          if echo "${{ steps.scan.outputs.ai-assets }}" | jq -e '.[].metadata.provider.name | test("OpenAI")' > /dev/null 2>&1; then
            echo "‚ö†Ô∏è OpenAI models detected - ensure API keys are properly secured!"
          fi

      - name: Comment on PR
        if: github.event_name == 'pull_request' && steps.scan.outputs.models-found > 0
        uses: actions/github-script@v7
        with:
          script: |
            const modelsFound = ${{ steps.scan.outputs.models-found }};
            const summary = `${{ steps.scan.outputs.summary }}`;

            const comment = `## ü§ñ AI Model Scan Results

            Found **${modelsFound}** AI model(s) in this pull request.

            ${summary}

            üìÑ [View detailed report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ---
            *Scanned by [HL-SCAI](https://github.com/hiddenlayerai/hl-scai)*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Upload detailed report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ai-model-scan-report
          path: ai-scan-results.json
          retention-days: 30

  policy-check:
    needs: scan-and-enforce
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Download scan results
        uses: actions/download-artifact@v4
        with:
          name: ai-model-scan-report

      - name: Policy enforcement
        run: |
          # Example policy checks
          echo "Checking AI usage policies..."

          # Parse the results
          models=$(jq -r '.ai_assets | length' ai-scan-results.json)

          # Example policies:
          # 1. No more than 5 different AI models
          if [ "$models" -gt 5 ]; then
            echo "‚ùå Policy violation: Too many AI models ($models > 5)"
            exit 1
          fi

          # 2. Check for approved models only
          unapproved=$(jq -r '.ai_assets[] | select(.metadata.provider.name != "HuggingFace") | .metadata.name' ai-scan-results.json || true)
          if [ ! -z "$unapproved" ]; then
            echo "‚ö†Ô∏è Warning: Non-HuggingFace models detected:"
            echo "$unapproved"
          fi

          echo "‚úÖ All policy checks passed!"
