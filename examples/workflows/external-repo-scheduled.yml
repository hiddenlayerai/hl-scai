# Example workflow for scheduled AI model scanning
# Place this file in .github/workflows/ai-scan-scheduled.yml in your repository

name: Weekly AI Model Audit
on:
  schedule:
    # Run every Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:  # Allow manual triggering

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scan for AI models
        id: ai-scan
        uses: hiddenlayerai/hl-scai@main
        with:
          directory: .
          huggingface-token: ${{ secrets.HUGGINGFACE_TOKEN }}
          output-file: weekly-ai-audit.json

      - name: Generate audit report
        run: |
          # Create a markdown report
          cat > audit-report.md << EOF
          # AI Model Audit Report

          **Date:** $(date)
          **Repository:** ${{ github.repository }}
          **Branch:** ${{ github.ref }}

          ## Summary

          - **Total AI Models Found:** ${{ steps.ai-scan.outputs.models-found }}

          ### Details:
          ${{ steps.ai-scan.outputs.summary }}

          ## Recommendations

          EOF

          # Add recommendations based on findings
          if [ "${{ steps.ai-scan.outputs.models-found }}" -eq 0 ]; then
            echo "✅ No AI models detected. No action required." >> audit-report.md
          else
            echo "### Action Items:" >> audit-report.md
            echo "1. Review all detected AI models for compliance" >> audit-report.md
            echo "2. Ensure all API keys are stored as secrets" >> audit-report.md
            echo "3. Verify model licenses are compatible with your use case" >> audit-report.md

            # Check for high-risk models
            if echo '${{ steps.ai-scan.outputs.ai-assets }}' | jq -e '.[].metadata.name | test("gpt-4")' > /dev/null 2>&1; then
              echo "4. ⚠️ GPT-4 detected - ensure usage is within budget limits" >> audit-report.md
            fi
          fi

          echo "" >> audit-report.md
          echo "---" >> audit-report.md
          echo "*Generated by [HL-SCAI](https://github.com/hiddenlayerai/hl-scai)*" >> audit-report.md

      - name: Upload audit artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ai-audit-${{ github.run_number }}
          path: |
            weekly-ai-audit.json
            audit-report.md
          retention-days: 90

      - name: Send notification (optional)
        if: steps.ai-scan.outputs.models-found > 0
        run: |
          # Example: Send a Slack notification
          # You would need to set up a Slack webhook and store it as a secret
          # curl -X POST -H 'Content-type: application/json' \
          #   --data "{\"text\":\"AI Model Audit: Found ${{ steps.ai-scan.outputs.models-found }} models in ${{ github.repository }}\"}" \
          #   ${{ secrets.SLACK_WEBHOOK }}

          echo "Notification: Found ${{ steps.ai-scan.outputs.models-found }} AI models"
