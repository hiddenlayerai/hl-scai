name: CI

on:
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Allow manual triggering

# Cancel in-progress runs when a new run is triggered
concurrency:
  group: ci-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-lint-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-lint-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run black
      run: black --check --line-length=119 hl_scai tests

    - name: Run isort
      run: isort --check-only --profile black --line-length 119 hl_scai tests

    - name: Run flake8
      run: flake8 --max-line-length=119 --extend-ignore=E203,W503,D100,D101,D102,D103,D104,D105,D106,D107,D202,D205,D400,SIM102,SIM114 hl_scai tests

    - name: Run mypy
      run: mypy hl_scai

  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    needs: lint  # Run tests only after linting passes
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-test-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-test-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"

    - name: Run tests with coverage
      run: |
        pytest --cov=hl_scai --cov-report=xml --cov-report=term --cov-report=html

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.12'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

    - name: Upload coverage artifacts
      if: matrix.python-version == '3.12'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov/
        retention-days: 7

  action-test:
    name: Test GitHub Action
    runs-on: ubuntu-latest
    needs: lint  # Run after linting passes

    steps:
    - uses: actions/checkout@v4

    - name: Test scanning examples
      id: scan-examples
      uses: ./
      with:
        directory: .github/examples
        output-file: action-test-results.json

    - name: Validate results
      run: |
        echo "Models found: ${{ steps.scan-examples.outputs.models-found }}"
        if [ "${{ steps.scan-examples.outputs.models-found }}" != "7" ]; then
          echo "Error: Expected 7 models in examples, found ${{ steps.scan-examples.outputs.models-found }}"
          exit 1
        fi
        echo "âœ… Action test passed!"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: action-test-results
        path: action-test-results.json
        retention-days: 7
